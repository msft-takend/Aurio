name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  dotnet_version: 6.0.x

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      nativename: ${{ matrix.os == 'ubuntu-latest' && 'linux' || 'x64' }}
    steps:
      
    - name: Install build tools
      run: sudo apt-get install -y cmake ninja-build
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.dotnet_version }}
    - name: Install local deps Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: .\install-deps.ps1
    - name: Install local deps Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        chmod +x ./install-deps.sh
        ./install-deps.sh
    - name: Setup native project
      run: cmake nativesrc --preset ${{ env.nativename }}-debug
    - name: Setup PFFFT 
      run: cmake nativesrc/pffft/ --preset ${{ env.nativename }}-release"
    - name: Build PFFFT
      run: cmake --build "nativesrc/pffft/out/build/${{ env.nativename }}-release"
    - name: Build native code
      run: cmake --build nativesrc/out/build/${{ env.nativename }}-debug
    - name: Archive Native artifacts
      uses: actions/upload-artifact@v3
      with:
        name: native-${{ matrix.os }}-${{ matrix.version }}
        path: |
          nativesrc/pffft/out/
          nativesrc/out/
    - name: Build
      run: dotnet build src -c Release
    - name: Test
      run: dotnet test src --no-build --verbosity normal -c Release

